#!/usr/bin/env python

#-----------------------------------------------------------------------
# testtournamentdiff
# Author: Iasonas Petras
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# testtournamentdiff is a testing script for tournament. To run it enter
# - "testtournamentdiff player1 player2 ... playerN" to check the reported 
#   rankings in stdout and the messages on stderr line by line, or
# - "testtournamentdiff -b player1 player2 ... playerN" to check the reported 
#   rankings in stdout and the messages on stderr (only differences displayed)
# The working directory must contain samplereferee, referee tournament, sampletournament
# and the player programs.
# The script executes the two programs on the specified players and compares
# the output, error stream and game history files using diff.
# The lines generated by diff are long, so widen your terminal window.
#-----------------------------------------------------------------------

import sys
import os

timeoutbound = '300' #The upper bound on the number of seconds a referee program can run. Currently at 5mins
diffFlags = ''
playerslist = ''

# Process the command-line arguments.

if sys.argv[1]== '-b':
    diffFlags = '--suppress-common-lines'
    playerslist = sys.argv[2:]
else:
    playerslist = sys.argv[1:]

# How to limit the time and size of files produced in python?

if len(sys.argv) < 3:
    print >> sys.stderr, 'Must provide at least two players for the tournament'
    sys.exit(1)

# Execute the two programs.

print
print '==========================================================================='
print 'Running sampletournament and tournament on'
StringOfPlayers = ''
for player in playerslist:
    StringOfPlayers = StringOfPlayers + ' ' + player
print 'players: ' + StringOfPlayers
print '==========================================================================='
print
sys.stdout.flush()

# Create two temporary directories.
os.system('mkdir __tempsampletournament')
os.system('mkdir __temptournament')

# Place sampleout1 and out1 in the temporary directories
os.system('touch __tempsampletournament/sampleout1')
os.system('touch __temptournament/out1')

# Place sampleerr1 and err1 in the temporary directories
os.system('touch __tempsampletournament/sampleerr1')
os.system('touch __temptournament/err1')

# Copy sampletournament and tournament to the corresponding temporary directories
os.system('cp sampletournament __tempsampletournament/sampletournament')
os.system('cp tournament __temptournament/tournament')

# Copy samplereferee and referee to the corresponding temporary directories
os.system('cp samplereferee __tempsampletournament/samplereferee')
os.system('cp referee __temptournament/referee')

# Copy players to the corresponding temporary directories
StringOfPlayers = ''
for player in playerslist:
    if os.path.isfile(player):
        os.system('cp ' + player + ' __tempsampletournament/.')
        os.system('cp ' + player + ' __temptournament/.')
    StringOfPlayers = StringOfPlayers + ' ' + player


# Save the assignment directory
studentdir = os.getcwd()

# Move to sampletournaments's directory and run sampletournament, redirecting its stdout to sampleout1 and stderr to sampleerr1.
os.chdir(studentdir + '/__tempsampletournament')
os.system('./sampletournament ' + StringOfPlayers + ' > sampleout1 2> sampleerr1')
# Move back to parent directory
os.chdir(studentdir)

# Move to tournament's directory and run tournament, redirecting its stdout to out1 and stderr to err1.
os.chdir(studentdir + '/__temptournament')
os.system('timeout ' + timeoutbound + ' ./tournament ' + StringOfPlayers + ' > out1 2> err1 ; if [ $? -eq 124 ] ; then echo ' + sys.argv[0] + ': tournament program timed out after ' + timeoutbound + ' secs ; fi')
# Move back to parent directory
os.chdir(studentdir)

print
print '---------------------------------------------------------------------------'
print 'Comparing the stdout streams'
print '---------------------------------------------------------------------------'
print
sys.stdout.flush()

# Compare sampleout1 and out1.
os.system('diff -y ' + diffFlags + ' __tempsampletournament/sampleout1 __temptournament/out1')

print
print '---------------------------------------------------------------------------'
print 'Comparing the sterr streams'
print '---------------------------------------------------------------------------'
print
sys.stdout.flush()

# Compare sampleerr1 and err1.
os.system('diff -y ' + diffFlags + ' __tempsampletournament/sampleerr1 __temptournament/err1')

# Compare the Referee Record files

for playerMIN in playerslist:
    for playerMAX in playerslist:
        if playerMAX!=playerMIN: 
            RecordFileName = playerMIN + '_vs_' + playerMAX
            if os.path.isfile('./__temptournament/' + RecordFileName) and os.path.isfile('./__tempsampletournament/' + RecordFileName):
            # Compare the record files
                print
                print '---------------------------------------------------------------------------'
                print 'Comparing the record files of the game %s vs %s' % (playerMIN, playerMAX)
                print '---------------------------------------------------------------------------'
                print
                sys.stdout.flush()

                os.system('diff -y ' + diffFlags + ' __tempsampletournament/' + RecordFileName + ' ' + ' __temptournament/' + RecordFileName)        
            else:
                if not os.path.isfile('./__temptournament/' + RecordFileName):
                    print sys.argv[0] +': Referee Record File ./__temptournament/' + RecordFileName + ' not produced'
                if not os.path.isfile('./__tempsampletournament/' + RecordFileName):
                    print sys.argv[0] + ': Samplereferee Record File ./__tempsampletournament/' + RecordFileName + ' not produced'

# Clean up.
os.system('rm -r __tempsampletournament')
os.system('rm -r __temptournament')
