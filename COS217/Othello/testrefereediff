#!/usr/bin/env python

#-----------------------------------------------------------------------
# testrefereediff
# Author: Iasonas Petras
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# testrefereediff is a testing script for referee. To run it, enter
# - command "testrefereediff playerMIN playerMAX" for simply checking the reported 
#   score in stdout and the messages on stderr line by line or 
# - "testrefereediff -tracking playerMIN playerMAX" for checking both reported scores,
#   stderr streams and reported history of game states line by line, or
# - "testrefereediff -b playerMIN playerMAX" for simply checking the reported 
#   score in stdout and the messages on stderr (only differences diplayed), or
# - "testrefereediff -b -tracking playerMIN playerMAX" for checking both reported scores,
#   stderr streams and reported history of game states (only differences displayed)
# The working directory must contain samplereferee and referee and the player programs.
# The script executes the two programs on the specified players and compares
# the output and game history files using diff.
# The lines generated by diff are long, so widen your terminal window.
#-----------------------------------------------------------------------

import sys
import os
import getpass # To get the username under UNIX/Windows

# Process the command-line arguments.

timeoutbound = '300' #The upper bound on the number of seconds a referee program can run. Currently at 5mins
playerMIN = None
playerMAX = None
diffFlags = ''
tracking = ''
studentid = getpass.getuser()

# How to limit the time and size of files produced in python?

if len(sys.argv) == 5:
    if sys.argv[1]== '-b' and sys.argv[2]== '-tracking':
        diffFlags = '--suppress-common-lines'
        playerMIN = sys.argv[3]
        playerMAX = sys.argv[4]
        tracking = '-tracking'
    else:
        print >> sys.stderr, 'Usage: ' + sys.argv[0] + ' [-b] [-tracking] playerMIN playerMAX'
        sys.exit(1)

elif len(sys.argv) == 4:
    if sys.argv[1] == '-b':
        diffFlags = '--suppress-common-lines'
        playerMIN = sys.argv[2]
        playerMAX = sys.argv[3]
        tracking = ''
    elif sys.argv[1] == '-tracking':        
        diffFlags = ''
        playerMIN = sys.argv[2]
        playerMAX = sys.argv[3]
        tracking = '-tracking'
    else:
        print >> sys.stderr, 'Usage: ' + sys.argv[0] + ' [-b] [-tracking] playerMIN playerMAX'
        sys.exit(1)

else:
    if len(sys.argv) != 3:
        print >> sys.stderr, 'Usage: ' + sys.argv[0] + ' [-b] [-tracking] playerMIN playerMAX'
        sys.exit(1)

    diffFlags = ''
    tracking = ''
    playerMIN = sys.argv[1]
    playerMAX = sys.argv[2]


# Execute the two programs.

print
print '==========================================================================='
print 'Running samplereferee and referee on player ' + playerMIN + ' ' + playerMAX
print '==========================================================================='
print
sys.stdout.flush()

# Create two temporary directories.
os.system('mkdir __tempsamplereferee')
os.system('mkdir __tempreferee')

# Place sampleout1 and out1 in the temporary directories
os.system('touch __tempsamplereferee/sampleout1')
os.system('touch __tempreferee/out1')

# Place sampleerr1 and err1 in the temporary directories
os.system('touch __tempsamplereferee/sampleerr1')
os.system('touch __tempreferee/err1')

# Copy samplereferee and referee to the corresponding temporary directories
os.system('cp samplereferee __tempsamplereferee/samplereferee')
os.system('cp referee __tempreferee/referee')

# Copy players to the corresponding temporary directories
if os.path.isfile(playerMIN):
    os.system('cp ' + playerMIN + ' __tempsamplereferee/.')
    os.system('cp ' + playerMIN + ' __tempreferee/.')
if os.path.isfile(playerMAX):
    os.system('cp ' + playerMAX + ' __tempsamplereferee/.')
    os.system('cp ' + playerMAX + ' __tempreferee/.')

# Save the assignment directory
studentdir = os.getcwd()

# Move to samplerefee's directory and run samplereferee, redirecting its stdout to sampleout1 and stderr to sampleerr1.
os.chdir(studentdir + '/__tempsamplereferee')
os.system('./samplereferee ' + tracking + ' ' + playerMIN + ' ' + playerMAX + ' > sampleout1 2> sampleerr1')
# Move back to parent directory
os.chdir(studentdir)

# Move to refee's directory and run referee for at most timeoutbound seconds, redirecting its stdout to out1 and stderr to err1.
os.chdir(studentdir + '/__tempreferee')
ret = os.system('timeout '+ timeoutbound + ' ./referee ' + tracking + ' ' + playerMIN + ' ' + playerMAX + ' > out1 2> err1 ; if [ $? -eq 124 ] ; then echo ' + sys.argv[0] + ': referee program timed out after '+ timeoutbound +' secs ; fi')
#if ret == 124:
#    print sys.argv[0] + ': referee process run for more than ' + timeoutbound + ' seconds and was killed'
#    os.chdir(studentdir)
#    if os.path.isdir('./__tempreferee'):
#        os.system('rm -r __tempreferee')
#    if os.path.isdir('./__tempsamplereferee'):
#        os.system('rm -r __tempsamplereferee')
#    sys.exit(0)
# Move back to parent directory
os.chdir(studentdir)

print
print '---------------------------------------------------------------------------'
print 'Comparing the stdout streams'
print '---------------------------------------------------------------------------'
print
sys.stdout.flush()

# Compare sampleout1 and out1.
os.system('diff -y ' + diffFlags + ' __tempsamplereferee/sampleout1 __tempreferee/out1')

print
print '---------------------------------------------------------------------------'
print 'Comparing the sterr streams'
print '---------------------------------------------------------------------------'
print
sys.stderr.flush()

# Compare sampleerr1 and err1.
os.system('diff -y ' + diffFlags + ' __tempsamplereferee/sampleerr1 __tempreferee/err1')

# Compare the Referee Record files if the referee was run with the tracking option
RecordFileName = playerMIN + '_vs_' + playerMAX
if tracking == '-tracking':
    if os.path.isfile('./__tempreferee/' + RecordFileName) and os.path.isfile('./__tempsamplereferee/' + RecordFileName):
        # Compare the record files
        print
        print '---------------------------------------------------------------------------'
        print 'Comparing the record files'
        print '---------------------------------------------------------------------------'
        print
        sys.stdout.flush()

        os.system('diff -y ' + diffFlags + ' __tempsamplereferee/' + RecordFileName + ' ' + ' __tempreferee/' + RecordFileName)
    else:
        # Compare the record files
        print
        print '---------------------------------------------------------------------------'
        print 'Comparing the record files'
        print '---------------------------------------------------------------------------'
        print
        sys.stdout.flush()
        if not os.path.isfile('./__tempreferee/' + RecordFileName):
            print sys.argv[0] + ': Referee Record File ./__tempreferee/' + RecordFileName + ' not produced'
        if not os.path.isfile('./__tempsamplereferee/' + RecordFileName):
            print sys.argv[0] + ': Samplereferee Record File ./__tempsamplereferee/' + RecordFileName + ' not produced'

print
print '---------------------------------------------------------------------------'
print 'Processes running under user ' + studentid + ' after termination of referee'
print '---------------------------------------------------------------------------'
print
os.system('ps -u ' + studentid)
print

# Clean up.
os.system('rm -r __tempsamplereferee')
os.system('rm -r __tempreferee')

