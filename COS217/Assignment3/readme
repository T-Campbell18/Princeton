Assignment 3 readme File

------------------------------------------------------------------------
What is your name?
Tyler Campbell


------------------------------------------------------------------------
What authorized sources of information did you use to complete
the assignment? COPY THE LIST of authorized sources of information
given in the "Policies" web page to this section of the readme file,
and edit it as appropriate.

The course's lectures.

The course's precepts.

The course's website.

Documents that are referenced directly by the course's website. 
Such documents include the course's lecture slides and precept handouts

The course's textbooks.

The man pages on the CourseLab cluster.


------------------------------------------------------------------------
What unauthorized sources of information did you use to complete the
assignment? List any unauthorized sources of information that you used
to complete the assignment, and describe how you used them. The course
"Policies" web page defines unauthorized sources of information, and
any source that you have used but not listed in the authorized sources
should be included here. Please note that using an unauthorized source
may trigger a course penalty, and depending on the nature of the
interaction, may additionally require the interaction being reported
to the Committee on Discipline. Write "None" if you used no
unauthorized sources of information.

None

------------------------------------------------------------------------
What is your assessment of the assignment? Was it helpful? Was it fun?

Challenging asssignment that i found helpful and fun.

------------------------------------------------------------------------
(optional) What information can you provide about your submission that
will help your grader to grade it in the most favorable light? In
particular, what bugs are in your submission?



------------------------------------------------------------------------
What warnings does splint generate on symtablelist.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."

None

------------------------------------------------------------------------
What warnings does splint generate on symtablehash.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."

None

------------------------------------------------------------------------
What warnings does critTer generate on symtablelist.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

symtablelist.c: line 67: medium priority:
Do you want to validate 'pvValue' through an assert?
A bindings value can be NULL

symtablelist.c: line 96: medium priority:
Do you want to validate 'pvValue' through an assert?
A bindings value can be NULL

symtablelist.c: line 190: medium priority:
Do you want to validate 'pvExtra' through an assert?
the extra parameter can be NULL

all need to be not asserted to pass tests as well

------------------------------------------------------------------------
What warnings does critTer generate on symtablehash.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

symtablehash.c: line 142: medium priority:
Do you want to validate 'pvValue' through an assert?
A bindings value can be NULL

symtablehash.c: line 177: medium priority:
Do you want to validate 'pvValue' through an assert?
A bindings value can be NULL

symtablehash.c: line 280: medium priority:
Do you want to validate 'pvExtra' through an assert?
the extra parameter can be NULL

all need to be not asserted to pass tests as well

------------------------------------------------------------------------
What are the CPU times reported by testsymtable.c with binding counts
100, 1000, 10000, 100000, and 1000000 using (1) your linked list
implementation, (2) your non-expanding hash table implementation, and
(3) your expanding hash table implementation? Fill in the blanks.

The linked list implementation with:
-- 100 bindings consumed 0.000283 seconds
-- 1000 bindings consumed 0.012552 seconds
-- 10000 bindings consumed 1.010411 seconds
-- 100000 bindings consumed 138.416936 seconds
-- 1000000 bindings consumed More than 5 minutes

The non-expanding hash table implementation with:
-- 100 bindings consumed 0.000168 seconds
-- 1000 bindings consumed 0.001511 seconds
-- 10000 bindings consumed 0.012910 seconds
-- 100000 bindings consumed 0.804431 seconds
-- 1000000 bindings consumed 125.745893 seconds

The expanding hash table implementation with:
-- 100 bindings consumed 0.000167 seconds
-- 1000 bindings consumed 0.000998 seconds
-- 10000 bindings consumed 0.010684 seconds
-- 100000 bindings consumed 0.106526 seconds
-- 1000000 bindings consumed 1.580314 seconds

------------------------------------------------------------------------
How much "user" time did the buzzlist and buzzhash programs consume
to process the huck.txt file? Fill in the blanks.

The buzzlist program consumed 4.509 seconds.
The buzzhash program consumed 0.120 seconds.

------------------------------------------------------------------------
To what degree did you study buzz.c?  Place "x" in one box.

[   ]  I read it closely enough to understand mostly how it works
[ x ]  I skimmed it to get the general idea.
[   ]  I didn't look at it.
